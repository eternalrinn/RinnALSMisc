local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\22\152","\143\56\182\69\73\191"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v125=0;local v126;while true do if (v125==0) then v126=v13(v103,v30);v30=nil;v125=1;end if (v125==1) then return v126;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (0==v104) then v105=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (7 -3) ;return (v54 * (43216383 -26439167)) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1;v59=(v31(v57,1,639 -(555 + 64) ) * (2^32)) + v56 ;v55=2;end if (2==v55) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (3==v55) then if (v60==0) then if (v59==0) then return v61 * (931 -(857 + 74)) ;else v60=1;v58=0;end elseif (v60==(2615 -(367 + 201))) then return ((v59==0) and (v61 * (1/(927 -(214 + 713))))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v121=0;while true do if (v121==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end if (v63==2) then v65={};for v114=1, #v64 do v65[v114]=v10(v9(v11(v64,v114,v114)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==0) then v81=v32();v82=nil;v80=1;end if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end end end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,1)==0) then local v110=0;local v111;local v112;local v113;while true do if (v110==3) then if (v31(v112,3,3)==1) then v113[4]=v71[v113[4]];end v66[v83]=v113;break;end if (1==v110) then v113={v33(),v33(),nil,nil};if (v111==0) then v113[3]=v33();v113[4]=v33();elseif (v111==(1 + 0)) then v113[3]=v34();elseif (v111==2) then v113[3]=v34() -(2^(893 -(282 + 595))) ;elseif (v111==3) then local v137=0;while true do if (v137==0) then v113[3]=v34() -(2^16) ;v113[4]=v33();break;end end end v110=2;end if (v110==2) then if (v31(v112,1,1)==1) then v113[2]=v71[v113[2]];end if (v31(v112,2,2)==1) then v113[1640 -(1523 + 114) ]=v71[v113[3 + 0 ]];end v110=3;end if (0==v110) then v111=v31(v84,2,3);v112=v31(v84,4,6);v110=1;end end end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(1066 -(68 + 997)) ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + 1 ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v109=0;while true do if (v109==0) then v99=v87[v91];v100=v99[1];v109=1;end if (v109==1) then if (v100<=48) then if (v100<=23) then if (v100<=11) then if (v100<=5) then if (v100<=2) then if (v100<=0) then v97[v99[2]]={};elseif (v100>1) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==1) then v92=(v192 + v190) -1 ;v193=0;v189=2;end if (v189==0) then v190=v99[2];v191,v192=v90(v97[v190](v97[v190 + 1 ]));v189=1;end if (v189==2) then for v436=v190,v92 do local v437=0;while true do if (v437==0) then v193=v193 + 1 ;v97[v436]=v191[v193];break;end end end break;end end else local v194=0;local v195;local v196;local v197;while true do if (0==v194) then v195=v99[2];v196=v97[v195];v194=1;end if (v194==1) then v197=v99[3];for v438=1,v197 do v196[v438]=v97[v195 + v438 ];end break;end end end elseif (v100<=3) then v97[v99[2]]= #v97[v99[3]];elseif (v100>4) then v97[v99[2]]=v99[3];else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=(1278 -(226 + 1044))) then if (v100<=6) then v97[v99[2]]=v99[3] + v97[v99[4]] ;elseif (v100>7) then if (v99[2]==v97[v99[4]]) then v91=v91 + (4 -3) ;else v91=v99[3];end else local v201=0;local v202;local v203;local v204;while true do if (0==v201) then v202=v99[2];v203=v97[v202];v201=1;end if (v201==1) then v204=v97[v202 + 2 ];if (v204>0) then if (v203>v97[v202 + 1 ]) then v91=v99[3];else v97[v202 + 3 ]=v203;end elseif (v203<v97[v202 + 1 ]) then v91=v99[3];else v97[v202 + 3 ]=v203;end break;end end end elseif (v100<=9) then local v143=0;local v144;while true do if (v143==0) then v144=v99[2];v97[v144]=v97[v144](v21(v97,v144 + 1 ,v92));break;end end elseif (v100==(127 -(32 + 85))) then local v205=0;local v206;local v207;while true do if (v205==0) then v206=v99[2];v207={};v205=1;end if (v205==1) then for v441=1, #v96 do local v442=v96[v441];for v488=0, #v442 do local v489=0;local v490;local v491;local v492;while true do if (v489==1) then v492=v490[2];if ((v491==v97) and (v492>=v206)) then local v547=0;while true do if (v547==0) then v207[v492]=v491[v492];v490[1]=v207;break;end end end break;end if (v489==0) then v490=v442[v488];v491=v490[1];v489=1;end end end end break;end end else local v208=0;local v209;while true do if (0==v208) then v209=v99[2];v97[v209]=v97[v209](v21(v97,v209 + 1 ,v99[3]));break;end end end elseif (v100<=17) then if (v100<=14) then if (v100<=12) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];elseif (v100>13) then local v210=0;local v211;local v212;while true do if (v210==0) then v211=v99[2];v212=v97[v99[3]];v210=1;end if (v210==1) then v97[v211 + 1 + 0 ]=v212;v97[v211]=v212[v99[4]];break;end end else local v213=0;local v214;while true do if (v213==0) then v214=v99[2];v97[v214](v97[v214 + 1 ]);break;end end end elseif (v100<=15) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;elseif (v100==16) then local v215=v99[2];local v216,v217=v90(v97[v215](v97[v215 + 1 ]));v92=(v217 + v215) -1 ;local v218=0;for v343=v215,v92 do local v344=0;while true do if (0==v344) then v218=v218 + 1 ;v97[v343]=v216[v218];break;end end end else v97[v99[2]]=v97[v99[3]];end elseif (v100<=(5 + 15)) then if (v100<=18) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v100>19) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];else local v223=0;local v224;while true do if (0==v223) then v224=v99[2];v97[v224]=v97[v224](v97[v224 + 1 ]);break;end end end elseif (v100<=(978 -(892 + 65))) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100>22) then if (v97[v99[2]]==v99[9 -5 ]) then v91=v91 + 1 ;else v91=v99[5 -2 ];end else v97[v99[2]]=v99[4 -1 ]~=0 ;end elseif (v100<=35) then if (v100<=29) then if (v100<=26) then if (v100<=24) then local v151=0;local v152;while true do if (v151==0) then v152=v99[2];v97[v152](v97[v152 + (351 -(87 + 263)) ]);break;end end elseif (v100>25) then v97[v99[2]]=v97[v99[3]] + v99[184 -(67 + 113) ] ;else local v227=v99[2];local v228=v99[4];local v229=v227 + 2 ;local v230={v97[v227](v97[v227 + 1 ],v97[v229])};for v346=1,v228 do v97[v229 + v346 ]=v230[v346];end local v231=v230[1];if v231 then local v372=0;while true do if (0==v372) then v97[v229]=v231;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100<=27) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>(21 + 7)) then local v233=0;local v234;local v235;local v236;while true do if (v233==1) then v236=0;for v445=v234,v99[4] do local v446=0;while true do if (v446==0) then v236=v236 + 1 ;v97[v445]=v235[v236];break;end end end break;end if (v233==0) then v234=v99[2];v235={v97[v234](v97[v234 + (2 -1) ])};v233=1;end end else v97[v99[2]][v97[v99[3]]]=v97[v99[4]];end elseif (v100<=32) then if (v100<=(23 + 7)) then local v153=0;local v154;local v155;while true do if (v153==1) then v97[v154 + 1 ]=v155;v97[v154]=v155[v99[4]];break;end if (v153==0) then v154=v99[2];v155=v97[v99[3]];v153=1;end end elseif (v100>(123 -92)) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];else v97[v99[2]]=v97[v99[955 -(802 + 150) ]][v99[4]];end elseif (v100<=(88 -55)) then do return;end elseif (v100>34) then local v243=0;local v244;local v245;local v246;while true do if (0==v243) then v244=v88[v99[3]];v245=nil;v243=1;end if (v243==1) then v246={};v245=v18({},{[v7("\192\118\203\204\47\23\153","\225\159\41\162\162\75\114")]=function(v447,v448) local v449=0;local v450;while true do if (v449==0) then v450=v246[v448];return v450[1][v450[2]];end end end,[v7("\180\184\26\7\66\130\137\16\7\77","\53\235\231\116\98")]=function(v451,v452,v453) local v454=0;local v455;while true do if (v454==0) then v455=v246[v452];v455[1][v455[3 -1 ]]=v453;break;end end end});v243=2;end if (v243==2) then for v456=1,v99[4] do local v457=0;local v458;while true do if (v457==0) then v91=v91 + 1 ;v458=v87[v91];v457=1;end if (v457==1) then if (v458[1]==17) then v246[v456-1 ]={v97,v458[3 + 0 ]};else v246[v456-1 ]={v74,v458[3]};end v96[ #v96 + (998 -(915 + 82)) ]=v246;break;end end end v97[v99[2]]=v40(v244,v245,v75);break;end end else do return v97[v99[2]]();end end elseif (v100<=41) then if (v100<=(107 -69)) then if (v100<=(21 + 15)) then local v156=0;local v157;local v158;local v159;local v160;while true do if (v156==0) then v157=v99[2];v158,v159=v90(v97[v157](v21(v97,v157 + 1 ,v99[3])));v156=1;end if (v156==2) then for v373=v157,v92 do local v374=0;while true do if (v374==0) then v160=v160 + 1 ;v97[v373]=v158[v160];break;end end end break;end if (v156==1) then v92=(v159 + v157) -1 ;v160=0;v156=2;end end elseif (v100>(48 -11)) then local v247=0;local v248;local v249;local v250;local v251;while true do if (v247==1) then v92=(v250 + v248) -1 ;v251=0;v247=2;end if (v247==0) then v248=v99[2];v249,v250=v90(v97[v248](v21(v97,v248 + 1 ,v99[3])));v247=1;end if (v247==2) then for v459=v248,v92 do local v460=0;while true do if (v460==0) then v251=v251 + 1 ;v97[v459]=v249[v251];break;end end end break;end end else v97[v99[2]]={};end elseif (v100<=(1226 -(1069 + 118))) then local v161=0;local v162;local v163;while true do if (0==v161) then v162=v99[2];v163=v97[v162];v161=1;end if (v161==1) then for v375=v162 + 1 ,v99[3] do v15(v163,v97[v375]);end break;end end elseif (v100>40) then local v253=0;local v254;local v255;local v256;while true do if (v253==2) then if (v255>0) then if (v256<=v97[v254 + 1 ]) then local v523=0;while true do if (v523==0) then v91=v99[3];v97[v254 + 3 ]=v256;break;end end end elseif (v256>=v97[v254 + 1 ]) then v91=v99[3];v97[v254 + (6 -3) ]=v256;end break;end if (v253==1) then v256=v97[v254] + v255 ;v97[v254]=v256;v253=2;end if (v253==0) then v254=v99[2];v255=v97[v254 + 2 ];v253=1;end end else local v257=0;local v258;while true do if (v257==0) then v258=v99[2];v97[v258]=v97[v258](v21(v97,v258 + 1 ,v92));break;end end end elseif (v100<=44) then if (v100<=42) then for v187=v99[2],v99[3] do v97[v187]=nil;end elseif (v100>43) then if v97[v99[2]] then v91=v91 + (1 -0) ;else v91=v99[3];end else local v259=v99[2];v97[v259]=v97[v259](v97[v259 + 1 ]);end elseif (v100<=46) then if (v100>(8 + 37)) then local v261=0;local v262;local v263;local v264;local v265;while true do if (v261==2) then for v461=v262,v92 do local v462=0;while true do if (v462==0) then v265=v265 + 1 ;v97[v461]=v263[v265];break;end end end break;end if (v261==0) then v262=v99[2];v263,v264=v90(v97[v262](v21(v97,v262 + (1 -0) ,v92)));v261=1;end if (v261==1) then v92=(v264 + v262) -(1 + 0) ;v265=0;v261=2;end end else local v266=0;local v267;local v268;while true do if (v266==1) then for v463=1, #v96 do local v464=v96[v463];for v497=0, #v464 do local v498=0;local v499;local v500;local v501;while true do if (v498==0) then v499=v464[v497];v500=v499[792 -(368 + 423) ];v498=1;end if (1==v498) then v501=v499[2];if ((v500==v97) and (v501>=v267)) then local v550=0;while true do if (v550==0) then v268[v501]=v500[v501];v499[1]=v268;break;end end end break;end end end end break;end if (v266==0) then v267=v99[2];v268={};v266=1;end end end elseif (v100>(147 -100)) then local v269=0;local v270;local v271;local v272;while true do if (v269==2) then for v465=3 -2 ,v99[4] do local v466=0;local v467;while true do if (1==v466) then if (v467[1]==17) then v272[v465-1 ]={v97,v467[3]};else v272[v465-1 ]={v74,v467[4 -1 ]};end v96[ #v96 + 1 ]=v272;break;end if (v466==0) then v91=v91 + (443 -(416 + 26)) ;v467=v87[v91];v466=1;end end end v97[v99[2]]=v40(v270,v271,v75);break;end if (v269==1) then v272={};v271=v18({},{[v7("\123\221\90\136\52\161\1","\92\36\130\51\230\80\196\121")]=function(v468,v469) local v470=0;local v471;while true do if (0==v470) then v471=v272[v469];return v471[1][v471[2]];end end end,[v7("\122\151\187\217\157\179\75\172\176\196","\218\37\200\213\188\234")]=function(v472,v473,v474) local v475=0;local v476;while true do if (v475==0) then v476=v272[v473];v476[19 -(10 + 8) ][v476[2]]=v474;break;end end end});v269=2;end if (v269==0) then v270=v88[v99[3]];v271=nil;v269=1;end end else do return;end end elseif (v100<=73) then if (v100<=60) then if (v100<=54) then if (v100<=51) then if (v100<=(487 -(145 + 293))) then local v164=0;local v165;while true do if (v164==0) then v165=v99[2];v97[v165](v21(v97,v165 + 1 ,v92));break;end end elseif (v100>50) then v97[v99[2]][v99[3]]=v97[v99[4]];else v74[v99[3]]=v97[v99[432 -(44 + 386) ]];end elseif (v100<=52) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100>53) then v91=v99[3];elseif (v99[1488 -(998 + 488) ]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(19 + 38)) then if (v100<=55) then do return v97[v99[2]]();end elseif (v100==56) then local v278=0;local v279;while true do if (v278==0) then v279=v99[2];do return v97[v279](v21(v97,v279 + 1 ,v99[3]));end break;end end else v97[v99[2]]=v40(v88[v99[3]],nil,v75);end elseif (v100<=58) then local v168=0;local v169;while true do if (0==v168) then v169=v99[2];do return v97[v169](v21(v97,v169 + 1 ,v99[3]));end break;end end elseif (v100>59) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v281=v99[2];do return v21(v97,v281,v92);end end elseif (v100<=66) then if (v100<=63) then if (v100<=61) then v97[v99[2]]=v99[3]~=0 ;elseif (v100==62) then v91=v99[3 + 0 ];else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=64) then v97[v99[2]]=v74[v99[3]];elseif (v100>65) then v97[v99[2]]=v97[v99[3]];else v97[v99[2]]=v74[v99[3]];end elseif (v100<=(841 -(201 + 571))) then if (v100<=(1205 -(116 + 1022))) then local v173=0;local v174;while true do if (v173==0) then v174=v99[2];v97[v174](v21(v97,v174 + 1 ,v99[12 -9 ]));break;end end elseif (v100>68) then for v360=v99[2],v99[3] do v97[v360]=nil;end else local v288=0;local v289;local v290;while true do if (0==v288) then v289=v99[3];v290=v97[v289];v288=1;end if (v288==1) then for v477=v289 + 1 ,v99[4] do v290=v290   .. v97[v477] ;end v97[v99[2 + 0 ]]=v290;break;end end end elseif (v100<=71) then if (v100==70) then v97[v99[2]]=v97[v99[3]]%v99[4] ;else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100>72) then local v293=0;local v294;local v295;local v296;local v297;while true do if (v293==2) then for v478=v294,v92 do v297=v297 + 1 ;v97[v478]=v295[v297];end break;end if (v293==0) then v294=v99[2];v295,v296=v90(v97[v294](v21(v97,v294 + 1 ,v92)));v293=1;end if (v293==1) then v92=(v296 + v294) -1 ;v297=0;v293=2;end end else local v298=0;local v299;while true do if (v298==0) then v299=v99[2];v97[v299]=v97[v299]();break;end end end elseif (v100<=85) then if (v100<=79) then if (v100<=(277 -201)) then if (v100<=(262 -188)) then local v175=0;local v176;local v177;local v178;while true do if (v175==1) then v178=v97[v176 + 2 ];if (v178>0) then if (v177>v97[v176 + 1 ]) then v91=v99[3];else v97[v176 + 3 ]=v177;end elseif (v177<v97[v176 + 1 ]) then v91=v99[3];else v97[v176 + 3 ]=v177;end break;end if (v175==0) then v176=v99[861 -(814 + 45) ];v177=v97[v176];v175=1;end end elseif (v100>75) then local v300=v99[2];v97[v300]=v97[v300](v21(v97,v300 + (2 -1) ,v99[3]));elseif (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=77) then local v179=0;local v180;while true do if (v179==0) then v180=v99[2];do return v21(v97,v180,v92);end break;end end elseif (v100==78) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else local v302=0;local v303;while true do if (v302==0) then v303=v99[2];v97[v303]=v97[v303]();break;end end end elseif (v100<=82) then if (v100<=80) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100==81) then local v304=0;local v305;local v306;local v307;while true do if (v304==1) then v307=0;for v481=v305,v99[1 + 3 ] do local v482=0;while true do if (v482==0) then v307=v307 + 1 ;v97[v481]=v306[v307];break;end end end break;end if (v304==0) then v305=v99[2];v306={v97[v305](v97[v305 + 1 ])};v304=1;end end else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=83) then local v183=v99[2];v97[v183](v21(v97,v183 + 1 ,v92));elseif (v100>84) then v97[v99[1 + 1 ]]=v75[v99[3]];else v97[v99[2]]=v75[v99[3]];end elseif (v100<=91) then if (v100<=88) then if (v100<=86) then if  not v97[v99[887 -(261 + 624) ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==87) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v74[v99[3]]=v97[v99[2]];end elseif (v100<=89) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);elseif (v100>90) then local v317=v99[2];local v318=v97[v317];for v366=v317 + 1 ,v92 do v15(v318,v97[v366]);end else local v319=0;local v320;local v321;while true do if (v319==1) then for v483=v320 + 1 ,v92 do v15(v321,v97[v483]);end break;end if (v319==0) then v320=v99[3 -1 ];v321=v97[v320];v319=1;end end end elseif (v100<=94) then if (v100<=92) then v97[v99[2]]=v99[3];elseif (v100==93) then local v322=v99[2];local v323=v99[4];local v324=v322 + 2 ;local v325={v97[v322](v97[v322 + 1 ],v97[v324])};for v367=1,v323 do v97[v324 + v367 ]=v325[v367];end local v326=v325[1];if v326 then local v382=0;while true do if (v382==0) then v97[v324]=v326;v91=v99[3];break;end end else v91=v91 + (1081 -(1020 + 60)) ;end else local v327=0;local v328;local v329;while true do if (v327==0) then v328=v99[3];v329=v97[v328];v327=1;end if (v327==1) then for v484=v328 + 1 ,v99[4] do v329=v329   .. v97[v484] ;end v97[v99[1425 -(630 + 793) ]]=v329;break;end end end elseif (v100<=96) then if (v100>95) then local v330=0;local v331;local v332;local v333;while true do if (v330==1) then v333=v97[v331] + v332 ;v97[v331]=v333;v330=2;end if (v330==2) then if (v332>0) then if (v333<=v97[v331 + (3 -2) ]) then local v535=0;while true do if (v535==0) then v91=v99[3];v97[v331 + 3 ]=v333;break;end end end elseif (v333>=v97[v331 + 1 ]) then local v536=0;while true do if (v536==0) then v91=v99[3];v97[v331 + 3 ]=v333;break;end end end break;end if (v330==0) then v331=v99[2];v332=v97[v331 + 2 ];v330=1;end end else local v334=0;local v335;local v336;local v337;while true do if (v334==0) then v335=v99[2];v336=v97[v335];v334=1;end if (v334==1) then v337=v99[3];for v485=1,v337 do v336[v485]=v97[v335 + v485 ];end break;end end end elseif (v100>(459 -362)) then local v338=0;local v339;while true do if (0==v338) then v339=v99[2];v97[v339](v21(v97,v339 + 1 ,v99[2 + 1 ]));break;end end else v97[v99[6 -4 ]]=v97[v99[3]]%v99[4] ;end v91=v91 + (1748 -(760 + 987)) ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
